
/*
Autogenerated file from Nethereum.RPC
*/
using System;
using System.Text;
using Nethereum.JsonRpc.Client;
using Newtonsoft.Json;
using System.Collections;
using Nethereum.Hex.HexTypes;
using Nethereum.RPC.Eth.DTOs;
using System.Collections.Generic;

namespace Nethereum.Unity.Rpc
{


    public class Web3ClientVersionUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Web3.Web3ClientVersion _web3ClientVersion;

        public Web3ClientVersionUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _web3ClientVersion = new RPC.Web3.Web3ClientVersion(null);
        }

        public Web3ClientVersionUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _web3ClientVersion = new RPC.Web3.Web3ClientVersion(null);
        }

        public IEnumerator SendRequest()
        {
            var request = _web3ClientVersion.BuildRequest();
            yield return SendRequest(request);
        }
    }


    public class Web3Sha3UnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Web3.Web3Sha3 _web3Sha3;

        public Web3Sha3UnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _web3Sha3 = new RPC.Web3.Web3Sha3(null);
        }

        public Web3Sha3UnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _web3Sha3 = new RPC.Web3.Web3Sha3(null);
        }

        public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexUTF8String valueToConvert)
        {
            var request = _web3Sha3.BuildRequest(valueToConvert);
            yield return SendRequest(request);
        }
    }


    public class ShhPostUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.ShhPost _shhPost;

        public ShhPostUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhPost = new RPC.Shh.ShhPost(null);
        }

        public ShhPostUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhPost = new RPC.Shh.ShhPost(null);
        }

        public IEnumerator SendRequest(Nethereum.RPC.Shh.DTOs.MessageInput input)
        {
            var request = _shhPost.BuildRequest(input);
            yield return SendRequest(request);
        }
    }


    public class ShhVersionUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.ShhVersion _shhVersion;

        public ShhVersionUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhVersion = new RPC.Shh.ShhVersion(null);
        }

        public ShhVersionUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhVersion = new RPC.Shh.ShhVersion(null);
        }

        public IEnumerator SendRequest()
        {
            var request = _shhVersion.BuildRequest();
            yield return SendRequest(request);
        }
    }


    public class ShhAddSymKeyUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.SymKey.ShhAddSymKey _shhAddSymKey;

        public ShhAddSymKeyUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhAddSymKey = new RPC.Shh.SymKey.ShhAddSymKey(null);
        }

        public ShhAddSymKeyUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhAddSymKey = new RPC.Shh.SymKey.ShhAddSymKey(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhAddSymKey.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhDeleteSymKeyUnityRequest : UnityRpcRequest<System.Boolean>
    {
        private readonly RPC.Shh.SymKey.ShhDeleteSymKey _shhDeleteSymKey;

        public ShhDeleteSymKeyUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhDeleteSymKey = new RPC.Shh.SymKey.ShhDeleteSymKey(null);
        }

        public ShhDeleteSymKeyUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhDeleteSymKey = new RPC.Shh.SymKey.ShhDeleteSymKey(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhDeleteSymKey.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhGenerateSymKeyFromPasswordUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.SymKey.ShhGenerateSymKeyFromPassword _shhGenerateSymKeyFromPassword;

        public ShhGenerateSymKeyFromPasswordUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhGenerateSymKeyFromPassword = new RPC.Shh.SymKey.ShhGenerateSymKeyFromPassword(null);
        }

        public ShhGenerateSymKeyFromPasswordUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhGenerateSymKeyFromPassword = new RPC.Shh.SymKey.ShhGenerateSymKeyFromPassword(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhGenerateSymKeyFromPassword.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhGetSymKeyUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.SymKey.ShhGetSymKey _shhGetSymKey;

        public ShhGetSymKeyUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhGetSymKey = new RPC.Shh.SymKey.ShhGetSymKey(null);
        }

        public ShhGetSymKeyUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhGetSymKey = new RPC.Shh.SymKey.ShhGetSymKey(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhGetSymKey.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhHasSymKeyUnityRequest : UnityRpcRequest<System.Boolean>
    {
        private readonly RPC.Shh.SymKey.ShhHasSymKey _shhHasSymKey;

        public ShhHasSymKeyUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhHasSymKey = new RPC.Shh.SymKey.ShhHasSymKey(null);
        }

        public ShhHasSymKeyUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhHasSymKey = new RPC.Shh.SymKey.ShhHasSymKey(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhHasSymKey.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhNewSymKeyUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.SymKey.ShhNewSymKey _shhNewSymKey;

        public ShhNewSymKeyUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhNewSymKey = new RPC.Shh.SymKey.ShhNewSymKey(null);
        }

        public ShhNewSymKeyUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhNewSymKey = new RPC.Shh.SymKey.ShhNewSymKey(null);
        }

        public IEnumerator SendRequest()
        {
            var request = _shhNewSymKey.BuildRequest();
            yield return SendRequest(request);
        }
    }


    public class ShhNewMessageFilterUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.MessageFilter.ShhNewMessageFilter _shhNewMessageFilter;

        public ShhNewMessageFilterUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhNewMessageFilter = new RPC.Shh.MessageFilter.ShhNewMessageFilter(null);
        }

        public ShhNewMessageFilterUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhNewMessageFilter = new RPC.Shh.MessageFilter.ShhNewMessageFilter(null);
        }

        public IEnumerator SendRequest(Nethereum.RPC.Shh.DTOs.MessageFilterInput input)
        {
            var request = _shhNewMessageFilter.BuildRequest(input);
            yield return SendRequest(request);
        }
    }


    public class ShhDeleteMessageFilterUnityRequest : UnityRpcRequest<System.Boolean>
    {
        private readonly RPC.Shh.MessageFilter.ShhDeleteMessageFilter _shhDeleteMessageFilter;

        public ShhDeleteMessageFilterUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhDeleteMessageFilter = new RPC.Shh.MessageFilter.ShhDeleteMessageFilter(null);
        }

        public ShhDeleteMessageFilterUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhDeleteMessageFilter = new RPC.Shh.MessageFilter.ShhDeleteMessageFilter(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhDeleteMessageFilter.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhGetFilterMessagesUnityRequest : UnityRpcRequest<Nethereum.RPC.Shh.DTOs.ShhMessage[]>
    {
        private readonly RPC.Shh.MessageFilter.ShhGetFilterMessages _shhGetFilterMessages;

        public ShhGetFilterMessagesUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhGetFilterMessages = new RPC.Shh.MessageFilter.ShhGetFilterMessages(null);
        }

        public ShhGetFilterMessagesUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhGetFilterMessages = new RPC.Shh.MessageFilter.ShhGetFilterMessages(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhGetFilterMessages.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhAddPrivateKeyUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.KeyPair.ShhAddPrivateKey _shhAddPrivateKey;

        public ShhAddPrivateKeyUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhAddPrivateKey = new RPC.Shh.KeyPair.ShhAddPrivateKey(null);
        }

        public ShhAddPrivateKeyUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhAddPrivateKey = new RPC.Shh.KeyPair.ShhAddPrivateKey(null);
        }

        public IEnumerator SendRequest(System.String privateKey)
        {
            var request = _shhAddPrivateKey.BuildRequest(privateKey);
            yield return SendRequest(request);
        }
    }


    public class ShhDeleteKeyPairUnityRequest : UnityRpcRequest<System.Boolean>
    {
        private readonly RPC.Shh.KeyPair.ShhDeleteKeyPair _shhDeleteKeyPair;

        public ShhDeleteKeyPairUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhDeleteKeyPair = new RPC.Shh.KeyPair.ShhDeleteKeyPair(null);
        }

        public ShhDeleteKeyPairUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhDeleteKeyPair = new RPC.Shh.KeyPair.ShhDeleteKeyPair(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhDeleteKeyPair.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhGetPrivateKeyUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.KeyPair.ShhGetPrivateKey _shhGetPrivateKey;

        public ShhGetPrivateKeyUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhGetPrivateKey = new RPC.Shh.KeyPair.ShhGetPrivateKey(null);
        }

        public ShhGetPrivateKeyUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhGetPrivateKey = new RPC.Shh.KeyPair.ShhGetPrivateKey(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhGetPrivateKey.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhGetPublicKeyUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.KeyPair.ShhGetPublicKey _shhGetPublicKey;

        public ShhGetPublicKeyUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhGetPublicKey = new RPC.Shh.KeyPair.ShhGetPublicKey(null);
        }

        public ShhGetPublicKeyUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhGetPublicKey = new RPC.Shh.KeyPair.ShhGetPublicKey(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhGetPublicKey.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhHasKeyPairUnityRequest : UnityRpcRequest<System.Boolean>
    {
        private readonly RPC.Shh.KeyPair.ShhHasKeyPair _shhHasKeyPair;

        public ShhHasKeyPairUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhHasKeyPair = new RPC.Shh.KeyPair.ShhHasKeyPair(null);
        }

        public ShhHasKeyPairUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhHasKeyPair = new RPC.Shh.KeyPair.ShhHasKeyPair(null);
        }

        public IEnumerator SendRequest(System.String str)
        {
            var request = _shhHasKeyPair.BuildRequest(str);
            yield return SendRequest(request);
        }
    }


    public class ShhNewKeyPairUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Shh.KeyPair.ShhNewKeyPair _shhNewKeyPair;

        public ShhNewKeyPairUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _shhNewKeyPair = new RPC.Shh.KeyPair.ShhNewKeyPair(null);
        }

        public ShhNewKeyPairUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _shhNewKeyPair = new RPC.Shh.KeyPair.ShhNewKeyPair(null);
        }

        public IEnumerator SendRequest()
        {
            var request = _shhNewKeyPair.BuildRequest();
            yield return SendRequest(request);
        }
    }


    public class PersonalListAccountsUnityRequest : UnityRpcRequest<System.String[]>
    {
        private readonly RPC.Personal.PersonalListAccounts _personalListAccounts;

        public PersonalListAccountsUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _personalListAccounts = new RPC.Personal.PersonalListAccounts(null);
        }

        public PersonalListAccountsUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _personalListAccounts = new RPC.Personal.PersonalListAccounts(null);
        }

        public IEnumerator SendRequest()
        {
            var request = _personalListAccounts.BuildRequest();
            yield return SendRequest(request);
        }
    }


    public class PersonalLockAccountUnityRequest : UnityRpcRequest<System.Boolean>
    {
        private readonly RPC.Personal.PersonalLockAccount _personalLockAccount;

        public PersonalLockAccountUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _personalLockAccount = new RPC.Personal.PersonalLockAccount(null);
        }

        public PersonalLockAccountUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _personalLockAccount = new RPC.Personal.PersonalLockAccount(null);
        }

        public IEnumerator SendRequest(System.String account)
        {
            var request = _personalLockAccount.BuildRequest(account);
            yield return SendRequest(request);
        }
    }


    public class PersonalNewAccountUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Personal.PersonalNewAccount _personalNewAccount;

        public PersonalNewAccountUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _personalNewAccount = new RPC.Personal.PersonalNewAccount(null);
        }

        public PersonalNewAccountUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _personalNewAccount = new RPC.Personal.PersonalNewAccount(null);
        }

        public IEnumerator SendRequest(System.String passPhrase)
        {
            var request = _personalNewAccount.BuildRequest(passPhrase);
            yield return SendRequest(request);
        }
    }


    public class PersonalSignAndSendTransactionUnityRequest : UnityRpcRequest<System.String>
    {
        private readonly RPC.Personal.PersonalSignAndSendTransaction _personalSignAndSendTransaction;

        public PersonalSignAndSendTransactionUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _personalSignAndSendTransaction = new RPC.Personal.PersonalSignAndSendTransaction(null);
        }

        public PersonalSignAndSendTransactionUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _personalSignAndSendTransaction = new RPC.Personal.PersonalSignAndSendTransaction(null);
        }

        public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.TransactionInput txn, System.String password)
        {
            var request = _personalSignAndSendTransaction.BuildRequest(txn, password);
            yield return SendRequest(request);
        }
    }


    public class PersonalUnlockAccountUnityRequest : UnityRpcRequest<System.Boolean>
    {
        private readonly RPC.Personal.PersonalUnlockAccount _personalUnlockAccount;

        public PersonalUnlockAccountUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
        {
            _personalUnlockAccount = new RPC.Personal.PersonalUnlockAccount(null);
        }

        public PersonalUnlockAccountUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
        {
            _personalUnlockAccount = new RPC.Personal.PersonalUnlockAccount(null);
        }

        public IEnumerator SendRequest(System.String address,string passPhrase, int durationInSeconds)
        {
            var request = _personalUnlockAccount.BuildRequest(address, passPhrase, durationInSeconds);
        yield return SendRequest(request);
    }
}


public class NetListeningUnityRequest : UnityRpcRequest<System.Boolean>
{
    private readonly RPC.Net.NetListening _netListening;

    public NetListeningUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _netListening = new RPC.Net.NetListening(null);
    }

    public NetListeningUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _netListening = new RPC.Net.NetListening(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _netListening.BuildRequest();
        yield return SendRequest(request);
    }
}


public class NetPeerCountUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Net.NetPeerCount _netPeerCount;

    public NetPeerCountUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _netPeerCount = new RPC.Net.NetPeerCount(null);
    }

    public NetPeerCountUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _netPeerCount = new RPC.Net.NetPeerCount(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _netPeerCount.BuildRequest();
        yield return SendRequest(request);
    }
}


public class NetVersionUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.Net.NetVersion _netVersion;

    public NetVersionUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _netVersion = new RPC.Net.NetVersion(null);
    }

    public NetVersionUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _netVersion = new RPC.Net.NetVersion(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _netVersion.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthRequestAccountsUnityRequest : UnityRpcRequest<System.String[]>
{
    private readonly RPC.HostWallet.EthRequestAccounts _ethRequestAccounts;

    public EthRequestAccountsUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethRequestAccounts = new RPC.HostWallet.EthRequestAccounts(null);
    }

    public EthRequestAccountsUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethRequestAccounts = new RPC.HostWallet.EthRequestAccounts(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethRequestAccounts.BuildRequest();
        yield return SendRequest(request);
    }
}


public class WalletAddEthereumChainUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.HostWallet.WalletAddEthereumChain _walletAddEthereumChain;

    public WalletAddEthereumChainUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _walletAddEthereumChain = new RPC.HostWallet.WalletAddEthereumChain(null);
    }

    public WalletAddEthereumChainUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _walletAddEthereumChain = new RPC.HostWallet.WalletAddEthereumChain(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.HostWallet.AddEthereumChainParameter addEthereumChainParameter)
    {
        var request = _walletAddEthereumChain.BuildRequest(addEthereumChainParameter);
        yield return SendRequest(request);
    }
}


public class WalletGetPermissionsUnityRequest : UnityRpcRequest<Newtonsoft.Json.Linq.JObject>
{
    private readonly RPC.HostWallet.WalletGetPermissions _walletGetPermissions;

    public WalletGetPermissionsUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _walletGetPermissions = new RPC.HostWallet.WalletGetPermissions(null);
    }

    public WalletGetPermissionsUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _walletGetPermissions = new RPC.HostWallet.WalletGetPermissions(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _walletGetPermissions.BuildRequest();
        yield return SendRequest(request);
    }
}


public class WalletRequestPermissionsUnityRequest : UnityRpcRequest<Newtonsoft.Json.Linq.JObject>
{
    private readonly RPC.HostWallet.WalletRequestPermissions _walletRequestPermissions;

    public WalletRequestPermissionsUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _walletRequestPermissions = new RPC.HostWallet.WalletRequestPermissions(null);
    }

    public WalletRequestPermissionsUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _walletRequestPermissions = new RPC.HostWallet.WalletRequestPermissions(null);
    }

    public IEnumerator SendRequest(System.String[] methods)
    {
        var request = _walletRequestPermissions.BuildRequest(methods);
        yield return SendRequest(request);
    }
}


public class WalletWatchAssetUnityRequest : UnityRpcRequest<System.Boolean>
{
    private readonly RPC.HostWallet.WalletWatchAsset _walletWatchAsset;

    public WalletWatchAssetUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _walletWatchAsset = new RPC.HostWallet.WalletWatchAsset(null);
    }

    public WalletWatchAssetUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _walletWatchAsset = new RPC.HostWallet.WalletWatchAsset(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.HostWallet.WatchAssetParameter watchAssetParameter)
    {
        var request = _walletWatchAsset.BuildRequest(watchAssetParameter);
        yield return SendRequest(request);
    }
}


public class EthAccountsUnityRequest : UnityRpcRequest<System.String[]>
{
    private readonly RPC.Eth.EthAccounts _ethAccounts;

    public EthAccountsUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethAccounts = new RPC.Eth.EthAccounts(null);
    }

    public EthAccountsUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethAccounts = new RPC.Eth.EthAccounts(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethAccounts.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthChainIdUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.EthChainId _ethChainId;

    public EthChainIdUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethChainId = new RPC.Eth.EthChainId(null);
    }

    public EthChainIdUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethChainId = new RPC.Eth.EthChainId(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethChainId.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthCoinBaseUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.Eth.EthCoinBase _ethCoinBase;

    public EthCoinBaseUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethCoinBase = new RPC.Eth.EthCoinBase(null);
    }

    public EthCoinBaseUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethCoinBase = new RPC.Eth.EthCoinBase(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethCoinBase.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthCreateAccessListUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.AccessListGasUsed>
{
    private readonly RPC.Eth.EthCreateAccessList _ethCreateAccessList;

    public EthCreateAccessListUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethCreateAccessList = new RPC.Eth.EthCreateAccessList(null);
    }

    public EthCreateAccessListUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethCreateAccessList = new RPC.Eth.EthCreateAccessList(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.TransactionInput transactionInput, Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _ethCreateAccessList.BuildRequest(transactionInput, block);
        yield return SendRequest(request);
    }
}


public class EthGasPriceUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.EthGasPrice _ethGasPrice;

    public EthGasPriceUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGasPrice = new RPC.Eth.EthGasPrice(null);
    }

    public EthGasPriceUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGasPrice = new RPC.Eth.EthGasPrice(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethGasPrice.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthGetBalanceUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.EthGetBalance _ethGetBalance;

    public EthGetBalanceUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetBalance = new RPC.Eth.EthGetBalance(null);
    }

    public EthGetBalanceUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetBalance = new RPC.Eth.EthGetBalance(null);
    }

    public IEnumerator SendRequest(System.String address, Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _ethGetBalance.BuildRequest(address, block);
        yield return SendRequest(request);
    }
}


public class EthGetCodeUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.Eth.EthGetCode _ethGetCode;

    public EthGetCodeUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetCode = new RPC.Eth.EthGetCode(null);
    }

    public EthGetCodeUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetCode = new RPC.Eth.EthGetCode(null);
    }

    public IEnumerator SendRequest(System.String address, Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _ethGetCode.BuildRequest(address, block);
        yield return SendRequest(request);
    }
}


public class EthGetProofUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.AccountProof>
{
    private readonly RPC.Eth.EthGetProof _ethGetProof;

    public EthGetProofUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetProof = new RPC.Eth.EthGetProof(null);
    }

    public EthGetProofUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetProof = new RPC.Eth.EthGetProof(null);
    }

    public IEnumerator SendRequest(System.String address, System.String[] storageKeys, Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _ethGetProof.BuildRequest(address, storageKeys, block);
        yield return SendRequest(request);
    }
}


public class EthGetStorageAtUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.Eth.EthGetStorageAt _ethGetStorageAt;

    public EthGetStorageAtUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetStorageAt = new RPC.Eth.EthGetStorageAt(null);
    }

    public EthGetStorageAtUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetStorageAt = new RPC.Eth.EthGetStorageAt(null);
    }

    public IEnumerator SendRequest(System.String address, Nethereum.Hex.HexTypes.HexBigInteger position, Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _ethGetStorageAt.BuildRequest(address, position, block);
        yield return SendRequest(request);
    }
}


public class EthMaxPriorityFeePerGasUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.EthMaxPriorityFeePerGas _ethMaxPriorityFeePerGas;

    public EthMaxPriorityFeePerGasUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethMaxPriorityFeePerGas = new RPC.Eth.EthMaxPriorityFeePerGas(null);
    }

    public EthMaxPriorityFeePerGasUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethMaxPriorityFeePerGas = new RPC.Eth.EthMaxPriorityFeePerGas(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethMaxPriorityFeePerGas.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthProtocolVersionUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.Eth.EthProtocolVersion _ethProtocolVersion;

    public EthProtocolVersionUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethProtocolVersion = new RPC.Eth.EthProtocolVersion(null);
    }

    public EthProtocolVersionUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethProtocolVersion = new RPC.Eth.EthProtocolVersion(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethProtocolVersion.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthSignUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.Eth.EthSign _ethSign;

    public EthSignUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethSign = new RPC.Eth.EthSign(null);
    }

    public EthSignUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethSign = new RPC.Eth.EthSign(null);
    }

    public IEnumerator SendRequest(System.String address, System.String data)
    {
        var request = _ethSign.BuildRequest(address, data);
        yield return SendRequest(request);
    }
}


public class EthSyncingUnityRequest : UnityRpcRequest<System.Object>
{
    private readonly RPC.Eth.EthSyncing _ethSyncing;

    public EthSyncingUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethSyncing = new RPC.Eth.EthSyncing(null);
    }

    public EthSyncingUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethSyncing = new RPC.Eth.EthSyncing(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethSyncing.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthGetUncleByBlockHashAndIndexUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.BlockWithTransactionHashes>
{
    private readonly RPC.Eth.Uncles.EthGetUncleByBlockHashAndIndex _ethGetUncleByBlockHashAndIndex;

    public EthGetUncleByBlockHashAndIndexUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetUncleByBlockHashAndIndex = new RPC.Eth.Uncles.EthGetUncleByBlockHashAndIndex(null);
    }

    public EthGetUncleByBlockHashAndIndexUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetUncleByBlockHashAndIndex = new RPC.Eth.Uncles.EthGetUncleByBlockHashAndIndex(null);
    }

    public IEnumerator SendRequest(System.String blockHash, Nethereum.Hex.HexTypes.HexBigInteger uncleIndex)
    {
        var request = _ethGetUncleByBlockHashAndIndex.BuildRequest(blockHash, uncleIndex);
        yield return SendRequest(request);
    }
}


public class EthGetUncleByBlockNumberAndIndexUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.BlockWithTransactionHashes>
{
    private readonly RPC.Eth.Uncles.EthGetUncleByBlockNumberAndIndex _ethGetUncleByBlockNumberAndIndex;

    public EthGetUncleByBlockNumberAndIndexUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetUncleByBlockNumberAndIndex = new RPC.Eth.Uncles.EthGetUncleByBlockNumberAndIndex(null);
    }

    public EthGetUncleByBlockNumberAndIndexUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetUncleByBlockNumberAndIndex = new RPC.Eth.Uncles.EthGetUncleByBlockNumberAndIndex(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.BlockParameter blockParameter, Nethereum.Hex.HexTypes.HexBigInteger uncleIndex)
    {
        var request = _ethGetUncleByBlockNumberAndIndex.BuildRequest(blockParameter, uncleIndex);
        yield return SendRequest(request);
    }
}


public class EthGetUncleCountByBlockHashUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Uncles.EthGetUncleCountByBlockHash _ethGetUncleCountByBlockHash;

    public EthGetUncleCountByBlockHashUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetUncleCountByBlockHash = new RPC.Eth.Uncles.EthGetUncleCountByBlockHash(null);
    }

    public EthGetUncleCountByBlockHashUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetUncleCountByBlockHash = new RPC.Eth.Uncles.EthGetUncleCountByBlockHash(null);
    }

    public IEnumerator SendRequest(System.String hash)
    {
        var request = _ethGetUncleCountByBlockHash.BuildRequest(hash);
        yield return SendRequest(request);
    }
}


public class EthGetUncleCountByBlockNumberUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Uncles.EthGetUncleCountByBlockNumber _ethGetUncleCountByBlockNumber;

    public EthGetUncleCountByBlockNumberUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetUncleCountByBlockNumber = new RPC.Eth.Uncles.EthGetUncleCountByBlockNumber(null);
    }

    public EthGetUncleCountByBlockNumberUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetUncleCountByBlockNumber = new RPC.Eth.Uncles.EthGetUncleCountByBlockNumber(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexBigInteger blockNumber)
    {
        var request = _ethGetUncleCountByBlockNumber.BuildRequest(blockNumber);
        yield return SendRequest(request);
    }
}


public class EthCallUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.Eth.Transactions.EthCall _ethCall;

    public EthCallUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethCall = new RPC.Eth.Transactions.EthCall(null);
    }

    public EthCallUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethCall = new RPC.Eth.Transactions.EthCall(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.CallInput callInput, Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _ethCall.BuildRequest(callInput, block);
        yield return SendRequest(request);
    }
}


public class EthEstimateGasUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Transactions.EthEstimateGas _ethEstimateGas;

    public EthEstimateGasUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethEstimateGas = new RPC.Eth.Transactions.EthEstimateGas(null);
    }

    public EthEstimateGasUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethEstimateGas = new RPC.Eth.Transactions.EthEstimateGas(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.CallInput callInput)
    {
        var request = _ethEstimateGas.BuildRequest(callInput);
        yield return SendRequest(request);
    }
}


public class EthFeeHistoryUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.FeeHistoryResult>
{
    private readonly RPC.Eth.Transactions.EthFeeHistory _ethFeeHistory;

    public EthFeeHistoryUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethFeeHistory = new RPC.Eth.Transactions.EthFeeHistory(null);
    }

    public EthFeeHistoryUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethFeeHistory = new RPC.Eth.Transactions.EthFeeHistory(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexBigInteger blockCount, Nethereum.RPC.Eth.DTOs.BlockParameter highestBlockNumber, System.Double[] rewardPercentiles = null)
    {
        var request = _ethFeeHistory.BuildRequest(blockCount, highestBlockNumber, rewardPercentiles);
        yield return SendRequest(request);
    }
}


public class EthGetTransactionByBlockHashAndIndexUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.Transaction>
{
    private readonly RPC.Eth.Transactions.EthGetTransactionByBlockHashAndIndex _ethGetTransactionByBlockHashAndIndex;

    public EthGetTransactionByBlockHashAndIndexUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetTransactionByBlockHashAndIndex = new RPC.Eth.Transactions.EthGetTransactionByBlockHashAndIndex(null);
    }

    public EthGetTransactionByBlockHashAndIndexUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetTransactionByBlockHashAndIndex = new RPC.Eth.Transactions.EthGetTransactionByBlockHashAndIndex(null);
    }

    public IEnumerator SendRequest(System.String blockHash, Nethereum.Hex.HexTypes.HexBigInteger transactionIndex)
    {
        var request = _ethGetTransactionByBlockHashAndIndex.BuildRequest(blockHash, transactionIndex);
        yield return SendRequest(request);
    }
}


public class EthGetTransactionByBlockNumberAndIndexUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.Transaction>
{
    private readonly RPC.Eth.Transactions.EthGetTransactionByBlockNumberAndIndex _ethGetTransactionByBlockNumberAndIndex;

    public EthGetTransactionByBlockNumberAndIndexUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetTransactionByBlockNumberAndIndex = new RPC.Eth.Transactions.EthGetTransactionByBlockNumberAndIndex(null);
    }

    public EthGetTransactionByBlockNumberAndIndexUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetTransactionByBlockNumberAndIndex = new RPC.Eth.Transactions.EthGetTransactionByBlockNumberAndIndex(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexBigInteger blockNumber, Nethereum.Hex.HexTypes.HexBigInteger transactionIndex)
    {
        var request = _ethGetTransactionByBlockNumberAndIndex.BuildRequest(blockNumber, transactionIndex);
        yield return SendRequest(request);
    }
}


public class EthGetTransactionByHashUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.Transaction>
{
    private readonly RPC.Eth.Transactions.EthGetTransactionByHash _ethGetTransactionByHash;

    public EthGetTransactionByHashUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetTransactionByHash = new RPC.Eth.Transactions.EthGetTransactionByHash(null);
    }

    public EthGetTransactionByHashUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetTransactionByHash = new RPC.Eth.Transactions.EthGetTransactionByHash(null);
    }

    public IEnumerator SendRequest(System.String hashTransaction)
    {
        var request = _ethGetTransactionByHash.BuildRequest(hashTransaction);
        yield return SendRequest(request);
    }
}


public class EthGetTransactionCountUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Transactions.EthGetTransactionCount _ethGetTransactionCount;

    public EthGetTransactionCountUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetTransactionCount = new RPC.Eth.Transactions.EthGetTransactionCount(null);
    }

    public EthGetTransactionCountUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetTransactionCount = new RPC.Eth.Transactions.EthGetTransactionCount(null);
    }

    public IEnumerator SendRequest(System.String address, Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _ethGetTransactionCount.BuildRequest(address, block);
        yield return SendRequest(request);
    }
}


public class EthGetTransactionReceiptUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.TransactionReceipt>
{
    private readonly RPC.Eth.Transactions.EthGetTransactionReceipt _ethGetTransactionReceipt;

    public EthGetTransactionReceiptUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetTransactionReceipt = new RPC.Eth.Transactions.EthGetTransactionReceipt(null);
    }

    public EthGetTransactionReceiptUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetTransactionReceipt = new RPC.Eth.Transactions.EthGetTransactionReceipt(null);
    }

    public IEnumerator SendRequest(System.String transactionHash)
    {
        var request = _ethGetTransactionReceipt.BuildRequest(transactionHash);
        yield return SendRequest(request);
    }
}


public class EthSendRawTransactionUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.Eth.Transactions.EthSendRawTransaction _ethSendRawTransaction;

    public EthSendRawTransactionUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethSendRawTransaction = new RPC.Eth.Transactions.EthSendRawTransaction(null);
    }

    public EthSendRawTransactionUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethSendRawTransaction = new RPC.Eth.Transactions.EthSendRawTransaction(null);
    }

    public IEnumerator SendRequest(System.String signedTransactionData)
    {
        var request = _ethSendRawTransaction.BuildRequest(signedTransactionData);
        yield return SendRequest(request);
    }
}


public class EthSendTransactionUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.Eth.Transactions.EthSendTransaction _ethSendTransaction;

    public EthSendTransactionUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethSendTransaction = new RPC.Eth.Transactions.EthSendTransaction(null);
    }

    public EthSendTransactionUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethSendTransaction = new RPC.Eth.Transactions.EthSendTransaction(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.TransactionInput input)
    {
        var request = _ethSendTransaction.BuildRequest(input);
        yield return SendRequest(request);
    }
}


public class EthGetWorkUnityRequest : UnityRpcRequest<System.String[]>
{
    private readonly RPC.Eth.Mining.EthGetWork _ethGetWork;

    public EthGetWorkUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetWork = new RPC.Eth.Mining.EthGetWork(null);
    }

    public EthGetWorkUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetWork = new RPC.Eth.Mining.EthGetWork(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethGetWork.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthHashrateUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Mining.EthHashrate _ethHashrate;

    public EthHashrateUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethHashrate = new RPC.Eth.Mining.EthHashrate(null);
    }

    public EthHashrateUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethHashrate = new RPC.Eth.Mining.EthHashrate(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethHashrate.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthMiningUnityRequest : UnityRpcRequest<System.Boolean>
{
    private readonly RPC.Eth.Mining.EthMining _ethMining;

    public EthMiningUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethMining = new RPC.Eth.Mining.EthMining(null);
    }

    public EthMiningUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethMining = new RPC.Eth.Mining.EthMining(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethMining.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthSubmitHashrateUnityRequest : UnityRpcRequest<System.Boolean>
{
    private readonly RPC.Eth.Mining.EthSubmitHashrate _ethSubmitHashrate;

    public EthSubmitHashrateUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethSubmitHashrate = new RPC.Eth.Mining.EthSubmitHashrate(null);
    }

    public EthSubmitHashrateUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethSubmitHashrate = new RPC.Eth.Mining.EthSubmitHashrate(null);
    }

    public IEnumerator SendRequest(System.String hashRate, System.String clientId)
    {
        var request = _ethSubmitHashrate.BuildRequest(hashRate, clientId);
        yield return SendRequest(request);
    }
}


public class EthSubmitWorkUnityRequest : UnityRpcRequest<System.Boolean>
{
    private readonly RPC.Eth.Mining.EthSubmitWork _ethSubmitWork;

    public EthSubmitWorkUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethSubmitWork = new RPC.Eth.Mining.EthSubmitWork(null);
    }

    public EthSubmitWorkUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethSubmitWork = new RPC.Eth.Mining.EthSubmitWork(null);
    }

    public IEnumerator SendRequest(System.String nonce, System.String header, System.String mix)
    {
        var request = _ethSubmitWork.BuildRequest(nonce, header, mix);
        yield return SendRequest(request);
    }
}


public class EthGetFilterChangesForEthNewFilterUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.FilterLog[]>
{
    private readonly RPC.Eth.Filters.EthGetFilterChangesForEthNewFilter _ethGetFilterChangesForEthNewFilter;

    public EthGetFilterChangesForEthNewFilterUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetFilterChangesForEthNewFilter = new RPC.Eth.Filters.EthGetFilterChangesForEthNewFilter(null);
    }

    public EthGetFilterChangesForEthNewFilterUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetFilterChangesForEthNewFilter = new RPC.Eth.Filters.EthGetFilterChangesForEthNewFilter(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexBigInteger filterId)
    {
        var request = _ethGetFilterChangesForEthNewFilter.BuildRequest(filterId);
        yield return SendRequest(request);
    }
}


public class EthGetFilterChangesForBlockOrTransactionUnityRequest : UnityRpcRequest<System.String[]>
{
    private readonly RPC.Eth.Filters.EthGetFilterChangesForBlockOrTransaction _ethGetFilterChangesForBlockOrTransaction;

    public EthGetFilterChangesForBlockOrTransactionUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetFilterChangesForBlockOrTransaction = new RPC.Eth.Filters.EthGetFilterChangesForBlockOrTransaction(null);
    }

    public EthGetFilterChangesForBlockOrTransactionUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetFilterChangesForBlockOrTransaction = new RPC.Eth.Filters.EthGetFilterChangesForBlockOrTransaction(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexBigInteger filterId)
    {
        var request = _ethGetFilterChangesForBlockOrTransaction.BuildRequest(filterId);
        yield return SendRequest(request);
    }
}


public class EthGetFilterLogsForBlockOrTransactionUnityRequest : UnityRpcRequest<System.String[]>
{
    private readonly RPC.Eth.Filters.EthGetFilterLogsForBlockOrTransaction _ethGetFilterLogsForBlockOrTransaction;

    public EthGetFilterLogsForBlockOrTransactionUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetFilterLogsForBlockOrTransaction = new RPC.Eth.Filters.EthGetFilterLogsForBlockOrTransaction(null);
    }

    public EthGetFilterLogsForBlockOrTransactionUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetFilterLogsForBlockOrTransaction = new RPC.Eth.Filters.EthGetFilterLogsForBlockOrTransaction(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexBigInteger filterId)
    {
        var request = _ethGetFilterLogsForBlockOrTransaction.BuildRequest(filterId);
        yield return SendRequest(request);
    }
}


public class EthGetFilterLogsForEthNewFilterUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.FilterLog[]>
{
    private readonly RPC.Eth.Filters.EthGetFilterLogsForEthNewFilter _ethGetFilterLogsForEthNewFilter;

    public EthGetFilterLogsForEthNewFilterUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetFilterLogsForEthNewFilter = new RPC.Eth.Filters.EthGetFilterLogsForEthNewFilter(null);
    }

    public EthGetFilterLogsForEthNewFilterUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetFilterLogsForEthNewFilter = new RPC.Eth.Filters.EthGetFilterLogsForEthNewFilter(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexBigInteger filterId)
    {
        var request = _ethGetFilterLogsForEthNewFilter.BuildRequest(filterId);
        yield return SendRequest(request);
    }
}


public class EthGetLogsUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.FilterLog[]>
{
    private readonly RPC.Eth.Filters.EthGetLogs _ethGetLogs;

    public EthGetLogsUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetLogs = new RPC.Eth.Filters.EthGetLogs(null);
    }

    public EthGetLogsUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetLogs = new RPC.Eth.Filters.EthGetLogs(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.NewFilterInput newFilter)
    {
        var request = _ethGetLogs.BuildRequest(newFilter);
        yield return SendRequest(request);
    }
}


public class EthNewBlockFilterUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Filters.EthNewBlockFilter _ethNewBlockFilter;

    public EthNewBlockFilterUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethNewBlockFilter = new RPC.Eth.Filters.EthNewBlockFilter(null);
    }

    public EthNewBlockFilterUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethNewBlockFilter = new RPC.Eth.Filters.EthNewBlockFilter(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethNewBlockFilter.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthNewFilterUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Filters.EthNewFilter _ethNewFilter;

    public EthNewFilterUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethNewFilter = new RPC.Eth.Filters.EthNewFilter(null);
    }

    public EthNewFilterUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethNewFilter = new RPC.Eth.Filters.EthNewFilter(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.NewFilterInput newFilterInput)
    {
        var request = _ethNewFilter.BuildRequest(newFilterInput);
        yield return SendRequest(request);
    }
}


public class EthNewPendingTransactionFilterUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Filters.EthNewPendingTransactionFilter _ethNewPendingTransactionFilter;

    public EthNewPendingTransactionFilterUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethNewPendingTransactionFilter = new RPC.Eth.Filters.EthNewPendingTransactionFilter(null);
    }

    public EthNewPendingTransactionFilterUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethNewPendingTransactionFilter = new RPC.Eth.Filters.EthNewPendingTransactionFilter(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethNewPendingTransactionFilter.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthUninstallFilterUnityRequest : UnityRpcRequest<System.Boolean>
{
    private readonly RPC.Eth.Filters.EthUninstallFilter _ethUninstallFilter;

    public EthUninstallFilterUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethUninstallFilter = new RPC.Eth.Filters.EthUninstallFilter(null);
    }

    public EthUninstallFilterUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethUninstallFilter = new RPC.Eth.Filters.EthUninstallFilter(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexBigInteger filterId)
    {
        var request = _ethUninstallFilter.BuildRequest(filterId);
        yield return SendRequest(request);
    }
}


public class EthCompileLLLUnityRequest : UnityRpcRequest<Newtonsoft.Json.Linq.JObject>
{
    private readonly RPC.Eth.Compilation.EthCompileLLL _ethCompileLLL;

    public EthCompileLLLUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethCompileLLL = new RPC.Eth.Compilation.EthCompileLLL(null);
    }

    public EthCompileLLLUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethCompileLLL = new RPC.Eth.Compilation.EthCompileLLL(null);
    }

    public IEnumerator SendRequest(System.String lllcode)
    {
        var request = _ethCompileLLL.BuildRequest(lllcode);
        yield return SendRequest(request);
    }
}


public class EthCompileSerpentUnityRequest : UnityRpcRequest<Newtonsoft.Json.Linq.JObject>
{
    private readonly RPC.Eth.Compilation.EthCompileSerpent _ethCompileSerpent;

    public EthCompileSerpentUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethCompileSerpent = new RPC.Eth.Compilation.EthCompileSerpent(null);
    }

    public EthCompileSerpentUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethCompileSerpent = new RPC.Eth.Compilation.EthCompileSerpent(null);
    }

    public IEnumerator SendRequest(System.String serpentCode)
    {
        var request = _ethCompileSerpent.BuildRequest(serpentCode);
        yield return SendRequest(request);
    }
}


public class EthCompileSolidityUnityRequest : UnityRpcRequest<Newtonsoft.Json.Linq.JToken>
{
    private readonly RPC.Eth.Compilation.EthCompileSolidity _ethCompileSolidity;

    public EthCompileSolidityUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethCompileSolidity = new RPC.Eth.Compilation.EthCompileSolidity(null);
    }

    public EthCompileSolidityUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethCompileSolidity = new RPC.Eth.Compilation.EthCompileSolidity(null);
    }

    public IEnumerator SendRequest(System.String contractCode)
    {
        var request = _ethCompileSolidity.BuildRequest(contractCode);
        yield return SendRequest(request);
    }
}


public class EthGetCompilersUnityRequest : UnityRpcRequest<System.String[]>
{
    private readonly RPC.Eth.Compilation.EthGetCompilers _ethGetCompilers;

    public EthGetCompilersUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetCompilers = new RPC.Eth.Compilation.EthGetCompilers(null);
    }

    public EthGetCompilersUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetCompilers = new RPC.Eth.Compilation.EthGetCompilers(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethGetCompilers.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthBlockNumberUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Blocks.EthBlockNumber _ethBlockNumber;

    public EthBlockNumberUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethBlockNumber = new RPC.Eth.Blocks.EthBlockNumber(null);
    }

    public EthBlockNumberUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethBlockNumber = new RPC.Eth.Blocks.EthBlockNumber(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _ethBlockNumber.BuildRequest();
        yield return SendRequest(request);
    }
}


public class EthGetBlockWithTransactionsByHashUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.BlockWithTransactions>
{
    private readonly RPC.Eth.Blocks.EthGetBlockWithTransactionsByHash _ethGetBlockWithTransactionsByHash;

    public EthGetBlockWithTransactionsByHashUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetBlockWithTransactionsByHash = new RPC.Eth.Blocks.EthGetBlockWithTransactionsByHash(null);
    }

    public EthGetBlockWithTransactionsByHashUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetBlockWithTransactionsByHash = new RPC.Eth.Blocks.EthGetBlockWithTransactionsByHash(null);
    }

    public IEnumerator SendRequest(System.String blockHash)
    {
        var request = _ethGetBlockWithTransactionsByHash.BuildRequest(blockHash);
        yield return SendRequest(request);
    }
}


public class EthGetBlockWithTransactionsHashesByHashUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.BlockWithTransactionHashes>
{
    private readonly RPC.Eth.Blocks.EthGetBlockWithTransactionsHashesByHash _ethGetBlockWithTransactionsHashesByHash;

    public EthGetBlockWithTransactionsHashesByHashUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetBlockWithTransactionsHashesByHash = new RPC.Eth.Blocks.EthGetBlockWithTransactionsHashesByHash(null);
    }

    public EthGetBlockWithTransactionsHashesByHashUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetBlockWithTransactionsHashesByHash = new RPC.Eth.Blocks.EthGetBlockWithTransactionsHashesByHash(null);
    }

    public IEnumerator SendRequest(System.String blockHash)
    {
        var request = _ethGetBlockWithTransactionsHashesByHash.BuildRequest(blockHash);
        yield return SendRequest(request);
    }
}


public class EthGetBlockTransactionCountByHashUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Blocks.EthGetBlockTransactionCountByHash _ethGetBlockTransactionCountByHash;

    public EthGetBlockTransactionCountByHashUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetBlockTransactionCountByHash = new RPC.Eth.Blocks.EthGetBlockTransactionCountByHash(null);
    }

    public EthGetBlockTransactionCountByHashUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetBlockTransactionCountByHash = new RPC.Eth.Blocks.EthGetBlockTransactionCountByHash(null);
    }

    public IEnumerator SendRequest(System.String hash)
    {
        var request = _ethGetBlockTransactionCountByHash.BuildRequest(hash);
        yield return SendRequest(request);
    }
}


public class EthGetBlockTransactionCountByNumberUnityRequest : UnityRpcRequest<Nethereum.Hex.HexTypes.HexBigInteger>
{
    private readonly RPC.Eth.Blocks.EthGetBlockTransactionCountByNumber _ethGetBlockTransactionCountByNumber;

    public EthGetBlockTransactionCountByNumberUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetBlockTransactionCountByNumber = new RPC.Eth.Blocks.EthGetBlockTransactionCountByNumber(null);
    }

    public EthGetBlockTransactionCountByNumberUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetBlockTransactionCountByNumber = new RPC.Eth.Blocks.EthGetBlockTransactionCountByNumber(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _ethGetBlockTransactionCountByNumber.BuildRequest(block);
        yield return SendRequest(request);
    }
}


public class EthGetBlockWithTransactionsByNumberUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.BlockWithTransactions>
{
    private readonly RPC.Eth.Blocks.EthGetBlockWithTransactionsByNumber _ethGetBlockWithTransactionsByNumber;

    public EthGetBlockWithTransactionsByNumberUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetBlockWithTransactionsByNumber = new RPC.Eth.Blocks.EthGetBlockWithTransactionsByNumber(null);
    }

    public EthGetBlockWithTransactionsByNumberUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetBlockWithTransactionsByNumber = new RPC.Eth.Blocks.EthGetBlockWithTransactionsByNumber(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexBigInteger number)
    {
        var request = _ethGetBlockWithTransactionsByNumber.BuildRequest(number);
        yield return SendRequest(request);
    }
}


public class EthGetBlockWithTransactionsHashesByNumberUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.BlockWithTransactionHashes>
{
    private readonly RPC.Eth.Blocks.EthGetBlockWithTransactionsHashesByNumber _ethGetBlockWithTransactionsHashesByNumber;

    public EthGetBlockWithTransactionsHashesByNumberUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethGetBlockWithTransactionsHashesByNumber = new RPC.Eth.Blocks.EthGetBlockWithTransactionsHashesByNumber(null);
    }

    public EthGetBlockWithTransactionsHashesByNumberUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethGetBlockWithTransactionsHashesByNumber = new RPC.Eth.Blocks.EthGetBlockWithTransactionsHashesByNumber(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexBigInteger number)
    {
        var request = _ethGetBlockWithTransactionsHashesByNumber.BuildRequest(number);
        yield return SendRequest(request);
    }

        public IEnumerator SendRequest(BlockParameter block)
        {
            var request = _ethGetBlockWithTransactionsHashesByNumber.BuildRequest(block);
            yield return SendRequest(request);
        }
    }


public class DebugGetBadBlocksUnityRequest : UnityRpcRequest<Nethereum.RPC.Eth.DTOs.BadBlock[]>
{
    private readonly RPC.DebugNode.DebugGetBadBlocks _debugGetBadBlocks;

    public DebugGetBadBlocksUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _debugGetBadBlocks = new RPC.DebugNode.DebugGetBadBlocks(null);
    }

    public DebugGetBadBlocksUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _debugGetBadBlocks = new RPC.DebugNode.DebugGetBadBlocks(null);
    }

    public IEnumerator SendRequest()
    {
        var request = _debugGetBadBlocks.BuildRequest();
        yield return SendRequest(request);
    }
}


public class DebugGetRawBlockUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.DebugNode.DebugGetRawBlock _debugGetRawBlock;

    public DebugGetRawBlockUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _debugGetRawBlock = new RPC.DebugNode.DebugGetRawBlock(null);
    }

    public DebugGetRawBlockUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _debugGetRawBlock = new RPC.DebugNode.DebugGetRawBlock(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _debugGetRawBlock.BuildRequest(block);
        yield return SendRequest(request);
    }
}


public class DebugGetRawHeaderUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.DebugNode.DebugGetRawHeader _debugGetRawHeader;

    public DebugGetRawHeaderUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _debugGetRawHeader = new RPC.DebugNode.DebugGetRawHeader(null);
    }

    public DebugGetRawHeaderUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _debugGetRawHeader = new RPC.DebugNode.DebugGetRawHeader(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _debugGetRawHeader.BuildRequest(block);
        yield return SendRequest(request);
    }
}


public class DebugGetRawReceiptsUnityRequest : UnityRpcRequest<System.String[]>
{
    private readonly RPC.DebugNode.DebugGetRawReceipts _debugGetRawReceipts;

    public DebugGetRawReceiptsUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _debugGetRawReceipts = new RPC.DebugNode.DebugGetRawReceipts(null);
    }

    public DebugGetRawReceiptsUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _debugGetRawReceipts = new RPC.DebugNode.DebugGetRawReceipts(null);
    }

    public IEnumerator SendRequest(Nethereum.RPC.Eth.DTOs.BlockParameter block)
    {
        var request = _debugGetRawReceipts.BuildRequest(block);
        yield return SendRequest(request);
    }
}


public class DebugGetRawTransactionUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.DebugNode.DebugGetRawTransaction _debugGetRawTransaction;

    public DebugGetRawTransactionUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _debugGetRawTransaction = new RPC.DebugNode.DebugGetRawTransaction(null);
    }

    public DebugGetRawTransactionUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _debugGetRawTransaction = new RPC.DebugNode.DebugGetRawTransaction(null);
    }

    public IEnumerator SendRequest(System.String transactionHash)
    {
        var request = _debugGetRawTransaction.BuildRequest(transactionHash);
        yield return SendRequest(request);
    }
}


public class EthPersonalSignUnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.AccountSigning.EthPersonalSign _ethPersonalSign;

    public EthPersonalSignUnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethPersonalSign = new RPC.AccountSigning.EthPersonalSign(null);
    }

    public EthPersonalSignUnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethPersonalSign = new RPC.AccountSigning.EthPersonalSign(null);
    }

    public IEnumerator SendRequest(Nethereum.Hex.HexTypes.HexUTF8String utf8Hex)
    {
        var request = _ethPersonalSign.BuildRequest(utf8Hex);
        yield return SendRequest(request);
    }
}


public class EthSignTypedDataV4UnityRequest : UnityRpcRequest<System.String>
{
    private readonly RPC.AccountSigning.EthSignTypedDataV4 _ethSignTypedDataV4;

    public EthSignTypedDataV4UnityRequest(string url, JsonSerializerSettings jsonSerializerSettings = null, Dictionary<string, string> requestHeaders = null) : base(url, jsonSerializerSettings, requestHeaders)
    {
        _ethSignTypedDataV4 = new RPC.AccountSigning.EthSignTypedDataV4(null);
    }

    public EthSignTypedDataV4UnityRequest(IUnityRpcRequestClientFactory unityRpcClientFactory) : base(unityRpcClientFactory)
    {
        _ethSignTypedDataV4 = new RPC.AccountSigning.EthSignTypedDataV4(null);
    }

    public IEnumerator SendRequest(System.String message)
    {
        var request = _ethSignTypedDataV4.BuildRequest(message);
        yield return SendRequest(request);
    }
}
                


}
